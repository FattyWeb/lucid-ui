@import "../../../styles/mixins";
@import "root";

.vs-radio-content {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;

  &.active {
    .vs-radio__effect__icon {
      opacity: 0;
      transition: all 0.25s ease;
      transform: scale(1.3);
    }

    .vs-radio__effect {
      &:after {
        border: 7px solid -color("color", 1);
        box-shadow: 0 3px 12px 0 -color("color", 0.3);
      }
    }
  }

  &:not(.active) {
    .vs-radio {
      input {
        &:hover {
          ~ .vs-radio__effect {
            .vs-radio__effect__icon {
              opacity: 0.7;
            }

            &::after {
              border: 2px solid -color("text", 0.2);
            }
          }
        }
      }
    }
  }

  &.loading {
    pointer-events: none;
    user-select: none;

    .vs-radio {
      &__effect {
        &:after {
          opacity: 0.1;
        }

        &__loading {
          position: absolute;
          width: 100%;
          height: 100%;
          border-radius: inherit;

          &:after {
            content: "";
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: inherit;
            border: 2px solid -color("text", 0.4);
            border-top: 2px solid -color("text", 0);
            border-left: 2px solid -color("text", 0);
            border-bottom: 2px solid -color("text", 0);
            box-sizing: border-box;
            transition: all 0.25s ease;
            display: block;
            box-shadow: 0 0 0 0 -color("color", 0.4);
            animation: loadingRadio 0.6s ease infinite;
          }

          &:before {
            content: "";
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: inherit;
            border: 2px dashed -color("text", 0.4);
            border-top: 2px solid -color("text", 0);
            border-left: 2px solid -color("text", 0);
            border-bottom: 2px solid -color("text", 0);
            box-sizing: border-box;
            transition: all 0.25s ease;
            display: block;
            box-shadow: 0 0 0 0 -color("color", 0.4);
            animation: loadingRadio 0.6s linear infinite;
          }
        }
      }
    }
  }

  label {
    cursor: pointer;
  }

  &.disabled {
    opacity: 0.5;
    pointer-events: none;

    .vs-radio {
      &__effect {
        background: -color("gray-3");
      }
    }

    label {
      pointer-events: none;
    }
  }
}

.vs-radio {
  width: 20px;
  height: 20px;
  min-width: 20px;
  min-height: 20px;
  margin: 0;
  padding: 0;
  border-radius: 50%;
  position: relative;
  z-index: 10;

  &__label {
    margin: 0 6px;
  }

  &__effect {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    left: 0;
    top: 0;
    transition: all 0.25s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    z-index: 10;

    &__icon {
      transition: all 0.25s ease;

      i {
        font-size: 0.75rem;
      }
    }

    &:after {
      content: "";
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      border: 2px solid -color("text", 0.4);
      box-sizing: border-box;
      transition: all 0.25s ease;
      display: block;
      box-shadow: 0 0 0 0 -color("color", 0.4);
    }
  }

  input {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 100;
    opacity: 0;
    cursor: pointer;

    &:active {
      ~ .vs-radio__effect {
        &:after {
          transform: scale(0.9);
        }
      }
    }

    // &:checked
    //  ~ .vs-radio__effect
    //    &:after
    //     //  border: 7px solid -color('color', 1)
    //       animation-name: radio
    //       animation-duration: 4s

    //       animation-play-state: paused
    //       animation-iteration-count: infinite

    //       box-shadow: 0 3px 10px 0 -color('color', .4)

  }

  @keyframes loadingRadio {
    0% {
      transform: rotate(0);
    }

    100% {
      transform: rotate(360deg);
    }
  }
}
